[
    {
        "Name": "apis/batch/v1",
        "ApiVersionPath": "apis/batch/v1",
        "Kinds": [
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent",
                "Name": "WatchEvent",
                "Description": "Event represents a single event to a watched resource.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.batch.v1.JobList",
                "Name": "JobList",
                "Description": "JobList is a collection of jobs.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList",
                "Name": "APIResourceList",
                "Description": "APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.batch.v1.CronJobList",
                "Name": "CronJobList",
                "Description": "CronJobList is a collection of cron jobs.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.batch.v1.CronJob",
                "Name": "CronJob",
                "Description": "CronJob represents the configuration of a single cron job.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions",
                "Name": "DeleteOptions",
                "Description": "DeleteOptions may be provided when deleting an API object.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.batch.v1.Job",
                "Name": "Job",
                "Description": "Job represents the configuration of a single job.",
                "Type": "object"
            }
        ]
    },
    {
        "Name": "apis/networking.k8s.io/v1",
        "ApiVersionPath": "apis/networking.k8s.io/v1",
        "Kinds": [
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent",
                "Name": "WatchEvent",
                "Description": "Event represents a single event to a watched resource.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions",
                "Name": "DeleteOptions",
                "Description": "DeleteOptions may be provided when deleting an API object.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.networking.v1.NetworkPolicyList",
                "Name": "NetworkPolicyList",
                "Description": "NetworkPolicyList is a list of NetworkPolicy objects.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList",
                "Name": "APIResourceList",
                "Description": "APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.networking.v1.NetworkPolicy",
                "Name": "NetworkPolicy",
                "Description": "NetworkPolicy describes what network traffic is allowed for a set of Pods",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.networking.v1.Ingress",
                "Name": "Ingress",
                "Description": "Ingress is a collection of rules that allow inbound connections to reach the endpoints defined by a backend. An Ingress can be configured to give services externally-reachable urls, load balance traffic, terminate SSL, offer name based virtual hosting etc.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.networking.v1.IngressList",
                "Name": "IngressList",
                "Description": "IngressList is a collection of Ingress.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.networking.v1.IngressClassList",
                "Name": "IngressClassList",
                "Description": "IngressClassList is a collection of IngressClasses.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.networking.v1.IngressClass",
                "Name": "IngressClass",
                "Description": "IngressClass represents the class of the Ingress, referenced by the Ingress Spec. The `ingressclass.kubernetes.io/is-default-class` annotation can be used to indicate that an IngressClass should be considered default. When a single IngressClass resource has this annotation set to true, new Ingress resources without a class specified will be assigned this default class.",
                "Type": "object"
            }
        ]
    },
    {
        "Name": "apis/apps/v1",
        "ApiVersionPath": "apis/apps/v1",
        "Kinds": [
            {
                "ResourceName": "io.k8s.api.apps.v1.StatefulSetList",
                "Name": "StatefulSetList",
                "Description": "StatefulSetList is a collection of StatefulSets.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.apps.v1.ReplicaSet",
                "Name": "ReplicaSet",
                "Description": "ReplicaSet ensures that a specified number of pod replicas are running at any given time.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions",
                "Name": "DeleteOptions",
                "Description": "DeleteOptions may be provided when deleting an API object.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.apps.v1.ControllerRevision",
                "Name": "ControllerRevision",
                "Description": "ControllerRevision implements an immutable snapshot of state data. Clients are responsible for serializing and deserializing the objects that contain their internal state. Once a ControllerRevision has been successfully created, it can not be updated. The API Server will fail validation of all requests that attempt to mutate the Data field. ControllerRevisions may, however, be deleted. Note that, due to its use by both the DaemonSet and StatefulSet controllers for update and rollback, this object is beta. However, it may be subject to name and representation changes in future releases, and clients should not depend on its stability. It is primarily for internal use by controllers.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.core.v1.PersistentVolumeClaim",
                "Name": "PersistentVolumeClaim",
                "Description": "PersistentVolumeClaim is a user's request for and claim to a persistent volume",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.autoscaling.v1.Scale",
                "Name": "Scale",
                "Description": "Scale represents a scaling request for a resource.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.apps.v1.StatefulSet",
                "Name": "StatefulSet",
                "Description": "StatefulSet represents a set of pods with consistent identities. Identities are defined as:\n  - Network: A single stable DNS and hostname.\n  - Storage: As many VolumeClaims as requested.\n\nThe StatefulSet guarantees that a given network identity will always map to the same storage identity.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent",
                "Name": "WatchEvent",
                "Description": "Event represents a single event to a watched resource.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.apps.v1.DaemonSet",
                "Name": "DaemonSet",
                "Description": "DaemonSet represents the configuration of a daemon set.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.apps.v1.DeploymentList",
                "Name": "DeploymentList",
                "Description": "DeploymentList is a list of Deployments.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.apps.v1.Deployment",
                "Name": "Deployment",
                "Description": "Deployment enables declarative updates for Pods and ReplicaSets.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.apps.v1.ReplicaSetList",
                "Name": "ReplicaSetList",
                "Description": "ReplicaSetList is a collection of ReplicaSets.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.apps.v1.DaemonSetList",
                "Name": "DaemonSetList",
                "Description": "DaemonSetList is a collection of daemon sets.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList",
                "Name": "APIResourceList",
                "Description": "APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.apps.v1.ControllerRevisionList",
                "Name": "ControllerRevisionList",
                "Description": "ControllerRevisionList is a resource containing a list of ControllerRevision objects.",
                "Type": "object"
            }
        ]
    },
    {
        "Name": "apis/autoscaling/v2",
        "ApiVersionPath": "apis/autoscaling/v2",
        "Kinds": [
            {
                "ResourceName": "io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerList",
                "Name": "HorizontalPodAutoscalerList",
                "Description": "HorizontalPodAutoscalerList is a list of horizontal pod autoscaler objects.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent",
                "Name": "WatchEvent",
                "Description": "Event represents a single event to a watched resource.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.autoscaling.v2.HorizontalPodAutoscaler",
                "Name": "HorizontalPodAutoscaler",
                "Description": "HorizontalPodAutoscaler is the configuration for a horizontal pod autoscaler, which automatically manages the replica count of any resource implementing the scale subresource based on the metrics specified.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList",
                "Name": "APIResourceList",
                "Description": "APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions",
                "Name": "DeleteOptions",
                "Description": "DeleteOptions may be provided when deleting an API object.",
                "Type": "object"
            }
        ]
    },
    {
        "Name": "apis/storage.k8s.io/v1",
        "ApiVersionPath": "apis/storage.k8s.io/v1",
        "Kinds": [
            {
                "ResourceName": "io.k8s.api.storage.v1.VolumeAttachment",
                "Name": "VolumeAttachment",
                "Description": "VolumeAttachment captures the intent to attach or detach the specified volume to/from the specified node.\n\nVolumeAttachment objects are non-namespaced.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions",
                "Name": "DeleteOptions",
                "Description": "DeleteOptions may be provided when deleting an API object.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.storage.v1.CSINode",
                "Name": "CSINode",
                "Description": "CSINode holds information about all CSI drivers installed on a node. CSI drivers do not need to create the CSINode object directly. As long as they use the node-driver-registrar sidecar container, the kubelet will automatically populate the CSINode object for the CSI driver as part of kubelet plugin registration. CSINode has the same name as a node. If the object is missing, it means either there are no CSI Drivers available on the node, or the Kubelet version is low enough that it doesn't create this object. CSINode has an OwnerReference that points to the corresponding node object.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent",
                "Name": "WatchEvent",
                "Description": "Event represents a single event to a watched resource.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.storage.v1.StorageClass",
                "Name": "StorageClass",
                "Description": "StorageClass describes the parameters for a class of storage for which PersistentVolumes can be dynamically provisioned.\n\nStorageClasses are non-namespaced; the name of the storage class according to etcd is in ObjectMeta.Name.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.storage.v1.CSIDriverList",
                "Name": "CSIDriverList",
                "Description": "CSIDriverList is a collection of CSIDriver objects.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.storage.v1.CSIDriver",
                "Name": "CSIDriver",
                "Description": "CSIDriver captures information about a Container Storage Interface (CSI) volume driver deployed on the cluster. Kubernetes attach detach controller uses this object to determine whether attach is required. Kubelet uses this object to determine whether pod information needs to be passed on mount. CSIDriver objects are non-namespaced.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.storage.v1.CSINodeList",
                "Name": "CSINodeList",
                "Description": "CSINodeList is a collection of CSINode objects.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.storage.v1.CSIStorageCapacity",
                "Name": "CSIStorageCapacity",
                "Description": "CSIStorageCapacity stores the result of one CSI GetCapacity call. For a given StorageClass, this describes the available capacity in a particular topology segment.  This can be used when considering where to instantiate new PersistentVolumes.\n\nFor example this can express things like: - StorageClass \"standard\" has \"1234 GiB\" available in \"topology.kubernetes.io/zone=us-east1\" - StorageClass \"localssd\" has \"10 GiB\" available in \"kubernetes.io/hostname=knode-abc123\"\n\nThe following three cases all imply that no capacity is available for a certain combination: - no object exists with suitable topology and storage class name - such an object exists, but the capacity is unset - such an object exists, but the capacity is zero\n\nThe producer of these objects can decide which approach is more suitable.\n\nThey are consumed by the kube-scheduler when a CSI driver opts into capacity-aware scheduling with CSIDriverSpec.StorageCapacity. The scheduler compares the MaximumVolumeSize against the requested size of pending volumes to filter out unsuitable nodes. If MaximumVolumeSize is unset, it falls back to a comparison against the less precise Capacity. If that is also unset, the scheduler assumes that capacity is insufficient and tries some other node.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.storage.v1.CSIStorageCapacityList",
                "Name": "CSIStorageCapacityList",
                "Description": "CSIStorageCapacityList is a collection of CSIStorageCapacity objects.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.storage.v1.StorageClassList",
                "Name": "StorageClassList",
                "Description": "StorageClassList is a collection of storage classes.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList",
                "Name": "APIResourceList",
                "Description": "APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.storage.v1.VolumeAttachmentList",
                "Name": "VolumeAttachmentList",
                "Description": "VolumeAttachmentList is a collection of VolumeAttachment objects.",
                "Type": "object"
            }
        ]
    },
    {
        "Name": "apis/rbac.authorization.k8s.io/v1",
        "ApiVersionPath": "apis/rbac.authorization.k8s.io/v1",
        "Kinds": [
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList",
                "Name": "APIResourceList",
                "Description": "APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.rbac.v1.ClusterRoleList",
                "Name": "ClusterRoleList",
                "Description": "ClusterRoleList is a collection of ClusterRoles",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.rbac.v1.Role",
                "Name": "Role",
                "Description": "Role is a namespaced, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent",
                "Name": "WatchEvent",
                "Description": "Event represents a single event to a watched resource.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.rbac.v1.RoleBinding",
                "Name": "RoleBinding",
                "Description": "RoleBinding references a role, but does not contain it.  It can reference a Role in the same namespace or a ClusterRole in the global namespace. It adds who information via Subjects and namespace information by which namespace it exists in.  RoleBindings in a given namespace only have effect in that namespace.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.rbac.v1.RoleBindingList",
                "Name": "RoleBindingList",
                "Description": "RoleBindingList is a collection of RoleBindings",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.rbac.v1.RoleList",
                "Name": "RoleList",
                "Description": "RoleList is a collection of Roles",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.rbac.v1.ClusterRole",
                "Name": "ClusterRole",
                "Description": "ClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding or ClusterRoleBinding.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.rbac.v1.ClusterRoleBindingList",
                "Name": "ClusterRoleBindingList",
                "Description": "ClusterRoleBindingList is a collection of ClusterRoleBindings",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions",
                "Name": "DeleteOptions",
                "Description": "DeleteOptions may be provided when deleting an API object.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.rbac.v1.ClusterRoleBinding",
                "Name": "ClusterRoleBinding",
                "Description": "ClusterRoleBinding references a ClusterRole, but not contain it.  It can reference a ClusterRole in the global namespace, and adds who information via Subject.",
                "Type": "object"
            }
        ]
    },
    {
        "Name": "apis/scheduling.k8s.io/v1",
        "ApiVersionPath": "apis/scheduling.k8s.io/v1",
        "Kinds": [
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent",
                "Name": "WatchEvent",
                "Description": "Event represents a single event to a watched resource.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.scheduling.v1.PriorityClass",
                "Name": "PriorityClass",
                "Description": "PriorityClass defines mapping from a priority class name to the priority integer value. The value can be any valid integer.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions",
                "Name": "DeleteOptions",
                "Description": "DeleteOptions may be provided when deleting an API object.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.scheduling.v1.PriorityClassList",
                "Name": "PriorityClassList",
                "Description": "PriorityClassList is a collection of priority classes.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList",
                "Name": "APIResourceList",
                "Description": "APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.",
                "Type": "object"
            }
        ]
    },
    {
        "Name": "api/v1",
        "ApiVersionPath": "api/v1",
        "Kinds": [
            {
                "ResourceName": "io.k8s.api.core.v1.LimitRangeList",
                "Name": "LimitRangeList",
                "Description": "LimitRangeList is a list of LimitRange items.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.core.v1.ComponentStatus",
                "Name": "ComponentStatus",
                "Description": "ComponentStatus (and ComponentStatusList) holds the cluster validation info. Deprecated: This API is deprecated in v1.19+",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.policy.v1.Eviction",
                "Name": "Eviction",
                "Description": "Eviction evicts a pod from its node subject to certain policies and safety constraints. This is a subresource of Pod.  A request to cause such an eviction is created by POSTing to .../pods/\u003cpod name\u003e/evictions.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.core.v1.EventList",
                "Name": "EventList",
                "Description": "EventList is a list of events.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.core.v1.NamespaceList",
                "Name": "NamespaceList",
                "Description": "NamespaceList is a list of Namespaces.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.core.v1.PodList",
                "Name": "PodList",
                "Description": "PodList is a list of Pods.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.core.v1.ResourceQuotaList",
                "Name": "ResourceQuotaList",
                "Description": "ResourceQuotaList is a list of ResourceQuota items.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.core.v1.ConfigMap",
                "Name": "ConfigMap",
                "Description": "ConfigMap holds configuration data for pods to consume.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.core.v1.ServiceAccountList",
                "Name": "ServiceAccountList",
                "Description": "ServiceAccountList is a list of ServiceAccount objects",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.core.v1.PersistentVolumeClaim",
                "Name": "PersistentVolumeClaim",
                "Description": "PersistentVolumeClaim is a user's request for and claim to a persistent volume",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.core.v1.ComponentStatusList",
                "Name": "ComponentStatusList",
                "Description": "Status of all the conditions for the component as a list of ComponentStatus objects. Deprecated: This API is deprecated in v1.19+",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.core.v1.Service",
                "Name": "Service",
                "Description": "Service is a named abstraction of software service (for example, mysql) consisting of local port (for example 3306) that the proxy listens on, and the selector that determines which pods will answer requests sent through the proxy.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.core.v1.ServiceAccount",
                "Name": "ServiceAccount",
                "Description": "ServiceAccount binds together: * a name, understood by users, and perhaps by peripheral systems, for an identity * a principal that can be authenticated and authorized * a set of secrets",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.core.v1.Event",
                "Name": "Event",
                "Description": "Event is a report of an event somewhere in the cluster.  Events have a limited retention time and triggers and messages may evolve with time.  Event consumers should not rely on the timing of an event with a given Reason reflecting a consistent underlying trigger, or the continued existence of events with that Reason.  Events should be treated as informative, best-effort, supplemental data.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.core.v1.Pod",
                "Name": "Pod",
                "Description": "Pod is a collection of containers that can run on a host. This resource is created by clients and scheduled onto hosts.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.core.v1.Secret",
                "Name": "Secret",
                "Description": "Secret holds secret data of a certain type. The total bytes of the values in the Data field must be less than MaxSecretSize bytes.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.core.v1.PersistentVolumeList",
                "Name": "PersistentVolumeList",
                "Description": "PersistentVolumeList is a list of PersistentVolume items.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.core.v1.Namespace",
                "Name": "Namespace",
                "Description": "Namespace provides a scope for Names. Use of multiple namespaces is optional.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.core.v1.LimitRange",
                "Name": "LimitRange",
                "Description": "LimitRange sets resource usage limits for each kind of resource in a Namespace.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.core.v1.ResourceQuota",
                "Name": "ResourceQuota",
                "Description": "ResourceQuota sets aggregate quota restrictions enforced per namespace",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.core.v1.Binding",
                "Name": "Binding",
                "Description": "Binding ties one object to another; for example, a pod is bound to a node by a scheduler. Deprecated in 1.7, please use the bindings subresource of pods instead.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.core.v1.PodTemplate",
                "Name": "PodTemplate",
                "Description": "PodTemplate describes a template for creating copies of a predefined pod.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent",
                "Name": "WatchEvent",
                "Description": "Event represents a single event to a watched resource.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.core.v1.EndpointsList",
                "Name": "EndpointsList",
                "Description": "EndpointsList is a list of endpoints.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.authentication.v1.TokenRequest",
                "Name": "TokenRequest",
                "Description": "TokenRequest requests a token for a given service account.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.core.v1.PersistentVolume",
                "Name": "PersistentVolume",
                "Description": "PersistentVolume (PV) is a storage resource provisioned by an administrator. It is analogous to a node. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions",
                "Name": "DeleteOptions",
                "Description": "DeleteOptions may be provided when deleting an API object.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.core.v1.ReplicationController",
                "Name": "ReplicationController",
                "Description": "ReplicationController represents the configuration of a replication controller.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.core.v1.SecretList",
                "Name": "SecretList",
                "Description": "SecretList is a list of Secret.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.core.v1.Node",
                "Name": "Node",
                "Description": "Node is a worker node in Kubernetes. Each node will have a unique identifier in the cache (i.e. in etcd).",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.core.v1.ConfigMapList",
                "Name": "ConfigMapList",
                "Description": "ConfigMapList is a resource containing a list of ConfigMap objects.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.core.v1.NodeList",
                "Name": "NodeList",
                "Description": "NodeList is the whole list of all Nodes which have been registered with master.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList",
                "Name": "APIResourceList",
                "Description": "APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.autoscaling.v1.Scale",
                "Name": "Scale",
                "Description": "Scale represents a scaling request for a resource.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.core.v1.PersistentVolumeClaimList",
                "Name": "PersistentVolumeClaimList",
                "Description": "PersistentVolumeClaimList is a list of PersistentVolumeClaim items.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.core.v1.ServiceList",
                "Name": "ServiceList",
                "Description": "ServiceList holds a list of services.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.core.v1.ReplicationControllerList",
                "Name": "ReplicationControllerList",
                "Description": "ReplicationControllerList is a collection of replication controllers.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.core.v1.Endpoints",
                "Name": "Endpoints",
                "Description": "Endpoints is a collection of endpoints that implement the actual service. Example:\n\n\t Name: \"mysvc\",\n\t Subsets: [\n\t   {\n\t     Addresses: [{\"ip\": \"10.10.1.1\"}, {\"ip\": \"10.10.2.2\"}],\n\t     Ports: [{\"name\": \"a\", \"port\": 8675}, {\"name\": \"b\", \"port\": 309}]\n\t   },\n\t   {\n\t     Addresses: [{\"ip\": \"10.10.3.3\"}],\n\t     Ports: [{\"name\": \"a\", \"port\": 93}, {\"name\": \"b\", \"port\": 76}]\n\t   },\n\t]",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.core.v1.PodTemplateList",
                "Name": "PodTemplateList",
                "Description": "PodTemplateList is a list of PodTemplates.",
                "Type": "object"
            }
        ]
    },
    {
        "Name": "apis/admissionregistration.k8s.io/v1",
        "ApiVersionPath": "apis/admissionregistration.k8s.io/v1",
        "Kinds": [
            {
                "ResourceName": "io.k8s.api.admissionregistration.v1.MutatingWebhookConfigurationList",
                "Name": "MutatingWebhookConfigurationList",
                "Description": "MutatingWebhookConfigurationList is a list of MutatingWebhookConfiguration.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions",
                "Name": "DeleteOptions",
                "Description": "DeleteOptions may be provided when deleting an API object.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.admissionregistration.v1.ValidatingWebhookConfiguration",
                "Name": "ValidatingWebhookConfiguration",
                "Description": "ValidatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and object without changing it.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent",
                "Name": "WatchEvent",
                "Description": "Event represents a single event to a watched resource.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList",
                "Name": "APIResourceList",
                "Description": "APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.admissionregistration.v1.MutatingWebhookConfiguration",
                "Name": "MutatingWebhookConfiguration",
                "Description": "MutatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and may change the object.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.admissionregistration.v1.ValidatingWebhookConfigurationList",
                "Name": "ValidatingWebhookConfigurationList",
                "Description": "ValidatingWebhookConfigurationList is a list of ValidatingWebhookConfiguration.",
                "Type": "object"
            }
        ]
    },
    {
        "Name": "apis/authorization.k8s.io/v1",
        "ApiVersionPath": "apis/authorization.k8s.io/v1",
        "Kinds": [
            {
                "ResourceName": "io.k8s.api.authorization.v1.SubjectAccessReview",
                "Name": "SubjectAccessReview",
                "Description": "SubjectAccessReview checks whether or not a user or group can perform an action.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.authorization.v1.SelfSubjectAccessReview",
                "Name": "SelfSubjectAccessReview",
                "Description": "SelfSubjectAccessReview checks whether or the current user can perform an action.  Not filling in a spec.namespace means \"in all namespaces\".  Self is a special case, because users should always be able to check whether they can perform an action",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.authorization.v1.LocalSubjectAccessReview",
                "Name": "LocalSubjectAccessReview",
                "Description": "LocalSubjectAccessReview checks whether or not a user or group can perform an action in a given namespace. Having a namespace scoped resource makes it much easier to grant namespace scoped policy that includes permissions checking.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.authorization.v1.SelfSubjectRulesReview",
                "Name": "SelfSubjectRulesReview",
                "Description": "SelfSubjectRulesReview enumerates the set of actions the current user can perform within a namespace. The returned list of actions may be incomplete depending on the server's authorization mode, and any errors experienced during the evaluation. SelfSubjectRulesReview should be used by UIs to show/hide actions, or to quickly let an end user reason about their permissions. It should NOT Be used by external systems to drive authorization decisions as this raises confused deputy, cache lifetime/revocation, and correctness concerns. SubjectAccessReview, and LocalAccessReview are the correct way to defer authorization decisions to the API server.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList",
                "Name": "APIResourceList",
                "Description": "APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.",
                "Type": "object"
            }
        ]
    },
    {
        "Name": "apis/events.k8s.io/v1",
        "ApiVersionPath": "apis/events.k8s.io/v1",
        "Kinds": [
            {
                "ResourceName": "io.k8s.api.events.v1.Event",
                "Name": "Event",
                "Description": "Event is a report of an event somewhere in the cluster. It generally denotes some state change in the system. Events have a limited retention time and triggers and messages may evolve with time.  Event consumers should not rely on the timing of an event with a given Reason reflecting a consistent underlying trigger, or the continued existence of events with that Reason.  Events should be treated as informative, best-effort, supplemental data.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.events.v1.EventList",
                "Name": "EventList",
                "Description": "EventList is a list of Event objects.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList",
                "Name": "APIResourceList",
                "Description": "APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent",
                "Name": "WatchEvent",
                "Description": "Event represents a single event to a watched resource.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions",
                "Name": "DeleteOptions",
                "Description": "DeleteOptions may be provided when deleting an API object.",
                "Type": "object"
            }
        ]
    },
    {
        "Name": "apis/apiextensions.k8s.io/v1",
        "ApiVersionPath": "apis/apiextensions.k8s.io/v1",
        "Kinds": [
            {
                "ResourceName": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionList",
                "Name": "CustomResourceDefinitionList",
                "Description": "CustomResourceDefinitionList is a list of CustomResourceDefinition objects.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList",
                "Name": "APIResourceList",
                "Description": "APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent",
                "Name": "WatchEvent",
                "Description": "Event represents a single event to a watched resource.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions",
                "Name": "DeleteOptions",
                "Description": "DeleteOptions may be provided when deleting an API object.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinition",
                "Name": "CustomResourceDefinition",
                "Description": "CustomResourceDefinition represents a resource that should be exposed on the API server.  Its name MUST be in the format \u003c.spec.name\u003e.\u003c.spec.group\u003e.",
                "Type": "object"
            }
        ]
    },
    {
        "Name": "apis/discovery.k8s.io/v1",
        "ApiVersionPath": "apis/discovery.k8s.io/v1",
        "Kinds": [
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList",
                "Name": "APIResourceList",
                "Description": "APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.discovery.v1.EndpointSlice",
                "Name": "EndpointSlice",
                "Description": "EndpointSlice represents a subset of the endpoints that implement a service. For a given service there may be multiple EndpointSlice objects, selected by labels, which must be joined to produce the full set of endpoints.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent",
                "Name": "WatchEvent",
                "Description": "Event represents a single event to a watched resource.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.discovery.v1.EndpointSliceList",
                "Name": "EndpointSliceList",
                "Description": "EndpointSliceList represents a list of endpoint slices",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions",
                "Name": "DeleteOptions",
                "Description": "DeleteOptions may be provided when deleting an API object.",
                "Type": "object"
            }
        ]
    },
    {
        "Name": "apis/flowcontrol.apiserver.k8s.io",
        "ApiVersionPath": "apis/flowcontrol.apiserver.k8s.io",
        "Kinds": [
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup",
                "Name": "APIGroup",
                "Description": "APIGroup contains the name, the supported versions, and the preferred version of a group.",
                "Type": "object"
            }
        ]
    },
    {
        "Name": "apis/coordination.k8s.io/v1",
        "ApiVersionPath": "apis/coordination.k8s.io/v1",
        "Kinds": [
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList",
                "Name": "APIResourceList",
                "Description": "APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent",
                "Name": "WatchEvent",
                "Description": "Event represents a single event to a watched resource.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions",
                "Name": "DeleteOptions",
                "Description": "DeleteOptions may be provided when deleting an API object.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.coordination.v1.Lease",
                "Name": "Lease",
                "Description": "Lease defines a lease concept.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.coordination.v1.LeaseList",
                "Name": "LeaseList",
                "Description": "LeaseList is a list of Lease objects.",
                "Type": "object"
            }
        ]
    },
    {
        "Name": "apis/certificates.k8s.io/v1",
        "ApiVersionPath": "apis/certificates.k8s.io/v1",
        "Kinds": [
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList",
                "Name": "APIResourceList",
                "Description": "APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions",
                "Name": "DeleteOptions",
                "Description": "DeleteOptions may be provided when deleting an API object.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.certificates.v1.CertificateSigningRequest",
                "Name": "CertificateSigningRequest",
                "Description": "CertificateSigningRequest objects provide a mechanism to obtain x509 certificates by submitting a certificate signing request, and having it asynchronously approved and issued.\n\nKubelets use this API to obtain:\n 1. client certificates to authenticate to kube-apiserver (with the \"kubernetes.io/kube-apiserver-client-kubelet\" signerName).\n 2. serving certificates for TLS endpoints kube-apiserver can connect to securely (with the \"kubernetes.io/kubelet-serving\" signerName).\n\nThis API can be used to request client certificates to authenticate to kube-apiserver (with the \"kubernetes.io/kube-apiserver-client\" signerName), or to obtain certificates from custom non-Kubernetes signers.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent",
                "Name": "WatchEvent",
                "Description": "Event represents a single event to a watched resource.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.certificates.v1.CertificateSigningRequestList",
                "Name": "CertificateSigningRequestList",
                "Description": "CertificateSigningRequestList is a collection of CertificateSigningRequest objects",
                "Type": "object"
            }
        ]
    },
    {
        "Name": "apis/node.k8s.io/v1",
        "ApiVersionPath": "apis/node.k8s.io/v1",
        "Kinds": [
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList",
                "Name": "APIResourceList",
                "Description": "APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.node.v1.RuntimeClassList",
                "Name": "RuntimeClassList",
                "Description": "RuntimeClassList is a list of RuntimeClass objects.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.node.v1.RuntimeClass",
                "Name": "RuntimeClass",
                "Description": "RuntimeClass defines a class of container runtime supported in the cluster. The RuntimeClass is used to determine which container runtime is used to run all containers in a pod. RuntimeClasses are manually defined by a user or cluster provisioner, and referenced in the PodSpec. The Kubelet is responsible for resolving the RuntimeClassName reference before running the pod.  For more details, see https://kubernetes.io/docs/concepts/containers/runtime-class/",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions",
                "Name": "DeleteOptions",
                "Description": "DeleteOptions may be provided when deleting an API object.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent",
                "Name": "WatchEvent",
                "Description": "Event represents a single event to a watched resource.",
                "Type": "object"
            }
        ]
    },
    {
        "Name": "apis/policy/v1",
        "ApiVersionPath": "apis/policy/v1",
        "Kinds": [
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions",
                "Name": "DeleteOptions",
                "Description": "DeleteOptions may be provided when deleting an API object.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.policy.v1.PodDisruptionBudgetList",
                "Name": "PodDisruptionBudgetList",
                "Description": "PodDisruptionBudgetList is a collection of PodDisruptionBudgets.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList",
                "Name": "APIResourceList",
                "Description": "APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent",
                "Name": "WatchEvent",
                "Description": "Event represents a single event to a watched resource.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.api.policy.v1.PodDisruptionBudget",
                "Name": "PodDisruptionBudget",
                "Description": "PodDisruptionBudget is an object to define the max disruption that can be caused to a collection of pods",
                "Type": "object"
            }
        ]
    },
    {
        "Name": "apis/authentication.k8s.io/v1",
        "ApiVersionPath": "apis/authentication.k8s.io/v1",
        "Kinds": [
            {
                "ResourceName": "io.k8s.api.authentication.v1.TokenReview",
                "Name": "TokenReview",
                "Description": "TokenReview attempts to authenticate a token to a known user. Note: TokenReview requests may be cached by the webhook token authenticator plugin in the kube-apiserver.",
                "Type": "object"
            },
            {
                "ResourceName": "io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList",
                "Name": "APIResourceList",
                "Description": "APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.",
                "Type": "object"
            }
        ]
    }
]